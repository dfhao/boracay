${extends("/goframe/function_layout.httl")}
<!--#macro(content)-->
<div style="padding: 5px 5px 0px 5px;">
    <div id="form1" method="post">
        <fieldset style="border:dotted 1px #227EA0;">
            <legend><span style="font-weight: bold">基础栏</span></legend>
            <table style="width:100%;height:100%;" cellpadding="5px,0px,5px,0px" class="nui-form-table">
                <tr>
                    <th class="nui-form-label"><label for="name">名称：</label></th>
                    <td>
                        <input id="name" name="name" class="nui-textbox" style="width: 97%" required="true"
                               vtype="maxLength:64" onvalidation="nameValidation"/>
                    </td>
                    <th class="nui-form-label"><label for="sDsId">数据源：</label></th>
                    <td>

                        <div  class="nui-combobox" style="width:97%;" id="sDsId"  popupWidth="400" textField="name" valueField="pkId" type="type"
                              url="${basePath}/com/ds/selectAllSrc" dataField="data" name="sDsId" multiSelect="false"  required="true" onvaluechanged="srcSourceChange">
                            <div property="columns">
                                <div header="名称" field="name"></div>
                                <div header="说明" field="describe"></div>
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <th class="nui-form-label"><label for="describe">说明：</label></th>
                    <td >
                        <input id="describe" name="describe" class="nui-textbox" style="width:99%" required="true"
                               vtype="maxLength:256"/>
                    </td>
                    <th class="nui-form-label"><label for="tMdId">目标元数据：</label></th>
                    <td >
                        <div id="tMdId" class="nui-combobox" style="width:70%;"  popupWidth="400" textField="name" valueField="pkId"
                             url="${basePath}/im/md/selectAll" dataField="data" name="tMdId" multiSelect="false"  required="true" onvaluechanged="targetSourceChange">
                            <div property="columns">
                                <div header="名称" field="name"></div>
                                <div header="说明" field="describe"></div>
                            </div>
                        </div>
                        <a class="nui-button" style="margin-left: 5px;" iconCls="icon-add" onclick="addTarget">添加</a>
                    </td>
                </tr>
                <tr>
                    <th class="nui-form-label"><label for="note">备注：</label></th>
                    <td colspan="3">
                        <input name="note" id="note" class="nui-textarea" style="height:60px; width:99%;"
                               vtype="maxLength:4000"/>
                    </td>
                </tr>
                <tr id="updateType" style="display:none">
                    <th class="nui-form-label"><label for="updateMode">更新策略：</label></th>
                    <td>
                        <input id="updateMode" name="updateMode" class="nui-dictcombobox" textField="dictName" valueField="dictId" style="width:70%;"
                               dictTypeId="IM_MODEL_UPDATE_TYPE" multiSelect="false"  required="false"/>
                        <!--<div id="updateMode" class="nui-combobox" style="width:70%;"  popupWidth="400" textField="dictName" valueField="dictId"
                             url="${basePath}/goframe/dict/getDictData?dictTypeId=IM_MODEL_UPDATE_TYPE"  name="updateMode" multiSelect="false"  required="false" onvaluechanged="targetSourceChange">
                            <div property="columns">
                                <div header="说明" field="dictName"></div>
                            </div>
                        </div>-->
                    </td>
                    <th class="nui-form-label"><label for="updateKey">更新主键：</label></th>
                    <td>
                        <input id="updateKey" name="updateKey" class="nui-buttonedit" onbuttonclick="showTargetCols" required="false"/>
                        <!--<div id="updateKey" class="nui-combobox" style="width:70%;"  popupWidth="400" textField="name" valueField="pkId"
                             url="${basePath}/com/ds/select" dataField="data" name="updateKey" multiSelect="false"  required="false" >
                            <div property="columns">
                                <div header="名称" field="name"></div>
                                <div header="说明" field="describe"></div>
                            </div>
                        </div>-->
                    </td>
                </tr>
                <tr id="buildType" style="display:none">
                    <th class="nui-form-label"><label for="buildMode">构建策略：</label></th>
                    <td colspan="3">

                        <input id="buildMode" name="buildMode" class="nui-dictcombobox" textField="dictName" valueField="dictId" style="width:70%;"
                               dictTypeId="IM_MODEL_BUILD_TYPE" multiSelect="false"  required="false"/>
                    </td>
                </tr>
                <tr id="eDsModel" style="display:none">
                    <th class="nui-form-label"><label for="buildMode">引擎数据源：</label></th>
                    <td colspan="3">
                        <div id="eDsId" class="nui-combobox" style="width:70%;"  popupWidth="400" textField="name" valueField="pkId"
                             url="${basePath}/com/ds/selectEDs" dataField="data" name="eDsId" multiSelect="true"  required="false">
                            <div property="columns">
                                <div header="名称" field="name"></div>
                                <div header="说明" field="describe"></div>
                            </div>
                        </div>
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
    <div>
        <fieldset style="border:dotted 1px #227EA0;">
            <legend><span style="font-weight: bold">配置栏</span></legend>
            <div style="padding: 5px 5px 0px 5px;">
                <div class="nui-toolbar" style="border-bottom: 0;">
                    <table style="width: 100%;">
                        <tr>
                            <td style="text-align: left;">
                                <b>配置参数</b>
                            </td>
                            <td style="text-align: right;">
                                <a class="nui-button" iconCls="icon-add" onclick="addComProperties">添加</a>
                                <a class="nui-button" iconCls="icon-remove" onclick="removeComProperties" enabled="false"
                                   id="removeComProperties">删除</a>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="nui-fit" style="height:150px; padding: 0px 5px 0px 5px;">
                <div id="datagrid1" class="nui-datagrid" style="width:100%; height: 100%;" dataField="data"
                     idField="pkId" multiSelect="true" allowCellEdit="true" allowCellSelect="true" sortMode="client"
                     showPager="false" editNextOnEnterKey="true" editNextRowCell="true" onselectionchanged="selectedProperties">
                    <div property="columns">
                        <div type="checkcolumn" headerAlign="center" width="5"></div>
                        <div type="indexcolumn" headerAlign="center" width="8">位置</div>
                        <div field="name" headerAlign="center" allowSort="true" width="30">名称<font
                                color="#FF0000">（必填）</font>
                            <input name="comPropertie" property="editor" class="nui-combobox"
                                   textField="name" valueField="name" allowInput="true"
                                   onbeforeshowpopup="comPropertiesName" vtype="maxLength:64" required="true" onvaluechanged="propertieChange"/>
                        </div>
                        <div field="describe" headerAlign="center" allowSort="true" width="30">说明<font color="#FF0000">（必填）</font>
                            <input property="editor" class="nui-textbox" vtype="maxLength:256"/>
                        </div>
                        <div field="value" headerAlign="center" allowSort="true" width="20">内容<font color="#FF0000">（必填）</font>
                            <input property="editor" class="nui-textarea" vtype="maxLength:4000" required="true"/>
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>
    </div>
    <div style="padding-bottom: 30px;padding-top: 10px;">
        <a class="nui-button" style="float: right;" iconCls="icon-reload" onclick="lodaMapping" id="lodaMapping">加载映射字段</a>
    </div>
    <div>
        <fieldset style="border:dotted 1px #227EA0;">
            <legend><span style="font-weight: bold">字段映射栏:</span></legend>
            <div style="padding: 5px 5px 0px 5px;">
                <div class="nui-toolbar" style="border-bottom: 0;">
                    <table style="width: 100%;">
                        <tr>
                            <td style="text-align: left;">
                                <b>字段映射信息</b>
                            </td>
                            <td style="text-align: right;">
                                <a class="nui-button" iconCls="icon-add" onclick="addMapp">添加</a>
                                <a class="nui-button" iconCls="icon-remove" onclick="removeMapp" enabled="false"
                                   id="removeMapp">删除</a>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>

            <div class="nui-fit" style="height:150px;padding: 0px 5px 0px 5px;">
                <div id="datagrid2" class="nui-datagrid" style="width:100%; height: 100%;" dataField="data"
                     idField="pkId" multiSelect="true" allowCellEdit="true" allowCellSelect="true" sortMode="client"
                     showPager="false" editNextOnEnterKey="true" editNextRowCell="true" onselectionchanged="selected1">
                    <div property="columns">
                        <div type="checkcolumn" headerAlign="center" width="5"></div>
                        <div type="indexcolumn" headerAlign="center" width="8">位置</div>
                        <div field="name" headerAlign="center" allowSort="true" width="28">源字段名称<font color="#FF0000">（必填）</font>
                            <input property="editor" class="nui-textbox" vtype="maxLength:256"/>
                        </div>
                        <div field="colId" headerAlign="center" allowSort="true" width="28">目标字段名称<font color="#FF0000">（必填）</font>
                            <input name="colName" property="editor" class="nui-combobox"
                                   textField="name" valueField="pkId" allowInput="true" dataField="data"
                                   onbeforeshowpopup="targetMateColumn" vtype="maxLength:64" required="true"/>
                        </div>
                        <div field="type" headerAlign="center" allowSort="true" width="10">类型<font color="#FF0000">（必填）</font>
                            <input property="editor" class="nui-dictcombobox" valueField="dictId" textField="dictName"
                                   dictTypeId="IQ_MD_COL_DATA_TYPE" value="STRING" vtype="maxLength:32"/>
                        </div>
                        <div field="length" headerAlign="center" allowSort="true" width="10">长度
                            <input property="editor" class="nui-textbox" vtype="maxLength:4000"/>
                        </div>
                        <div field="describe" headerAlign="center" allowSort="true" width="30">描述<font color="#FF0000">（必填）</font>
                            <input property="editor" class="nui-textbox" vtype="maxLength:4000"/>
                        </div>
                        <div field="note" headerAlign="center" allowSort="true" width="30">备注
                            <input property="editor" class="nui-textbox" vtype="maxLength:4000"/>
                        </div>
                    </div>
                </div>
            </div>

        </fieldset>
    </div>
    <div>
        <fieldset style="border:dotted 1px #227EA0;">
            <legend><span style="font-weight: bold">字段过滤栏:</span></legend>
            <div style="padding: 5px 5px 0px 5px;">
                <div class="nui-toolbar" style="border-bottom: 0;">
                    <table style="width: 100%;">
                        <tr>
                            <td style="text-align: left;">
                                <b>过滤字段信息</b>
                            </td>
                            <td style="text-align: right;">
                                <a class="nui-button" iconCls="icon-add" onclick="addFilter">添加</a>
                                <a class="nui-button" iconCls="icon-remove" onclick="removeFilter" enabled="false"
                                   id="removeFilter">删除</a>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="nui-fit" style="height:150px; padding: 0px 5px 0px 5px;">
                <div id="datagrid4" class="nui-datagrid" style="width:100%; height: 100%;" dataField="data"
                     idField="pkId" multiSelect="true" allowCellEdit="true" allowCellSelect="true" sortMode="client"
                     showPager="false" editNextOnEnterKey="true" editNextRowCell="true" onselectionchanged="selected2">
                    <div property="columns">
                        <div type="checkcolumn" headerAlign="center" width="5"></div>
                        <div type="indexcolumn" headerAlign="center" width="8">位置</div>
                        <div field="name" headerAlign="center" allowSort="true" width="30">字段名称<font
                                color="#FF0000">（必填）</font>
                            <!--<input property="editor" class="nui-textbox" vtype="maxLength:256"/>-->
                            <input name="colName" property="editor" class="nui-combobox"
                                   textField="name" valueField="name" allowInput="true" dataField="data"
                                   onbeforeshowpopup="targetFilterColumn" vtype="maxLength:64" required="true"
                                   onvaluechanged="colNameChanged1"/>
                        </div>
                        <div field="describe" headerAlign="center" allowSort="true" width="30">说明<font color="#FF0000">（必填）</font>
                            <input property="editor" class="nui-textbox" vtype="maxLength:256"/>
                        </div>
                        <div field="type" headerAlign="center" allowSort="true" width="20">类型<font color="#FF0000">（必填）</font>
                            <input property="editor" class="nui-dictcombobox" valueField="dictId" textField="dictName"
                                   dictTypeId="IQ_MD_COL_DATA_TYPE" value="STRING" vtype="maxLength:32"/>
                        </div>
                        <div field="length" headerAlign="center" allowSort="true" width="15">长度
                            <input property="editor" class="nui-textbox" vtype="maxLength:32"/>
                        </div>
                        <div type="checkboxcolumn"  field="isNeed" trueValue="0" falseValue="1"
                             headerAlign="center" allowSort="true" width="8">必填
                        </div>
                        <div field="operator" headerAlign="center" allowSort="true" width="15">操作符<font color="#FF0000">（必填）</font>
                            <input property="editor" class="nui-dictcombobox" valueField="dictId" textField="dictName"
                                   dictTypeId="IM_MODEL_FILTER_TYPE" value="STRING" vtype="maxLength:32"/>
                        </div>
                        <div field="defaultVal" headerAlign="center" allowSort="true" width="15">默认值
                            <input property="editor" class="nui-textbox" vtype="maxLength:32"/>
                        </div>
                        <div field="label" headerAlign="center" allowSort="true" width="30">别名
                            <input property="editor" class="nui-textbox" vtype="maxLength:4000"/>
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>
    </div>
    <div class="nui-toolbar" style="text-align:center;padding-top:10px;padding-bottom:5px;" borderStyle="border:0;">
        <a class="nui-button" style="" iconCls="icon-save" onclick="save" id="saveButton">保存</a>
        <span style="display:inline-block;width:25px;"></span>
        <a class="nui-button" style="" iconCls="icon-cancel" onclick="cancel">返回</a>
    </div>
</div>
</div>

<script type="text/javascript">
    var form1;
    var grid1;
    var grid2;
    var grid4;
    var srcDsModel;
    var targetDsModel;
    var targetSourceId;
    var updateModeObject;
    var updateKeyObject;
    var buildModeObject;
    var srcSourceType;
    var modelName;
    var filterCols = [];
    var cols;
    /**
     * 按需加载资源文件
     */
    require(['jquery', 'nui'], function ($, nui) {
        nui.parse();
        form1 = new nui.Form("#form1");
        grid1 = nui.get("datagrid1");
        grid2 = nui.get("datagrid2");
        grid4 = nui.get("datagrid4");
        srcDsModel = nui.get("sDsId");
        targetDsModel = nui.get("tMdId");
        updateModeObject = nui.get("updateMode");
        updateKeyObject = nui.get("updateKey");
        buildModeObject = nui.get("buildMode");

        //加载数据
        loadData();
    });

    function loadData(){
        //加载配置栏内容
        $.post("${basePath}/im/model/selectByPkId/${pkId}", {}, function (data) {

            form1.setData(data);
            form1.setChanged(false);
            //初始化模型名称
            modelName = data.name;
            targetSourceId = data.tMdId;
            //判断是否实时
            if(data.type == "2"){
                $("#updateType").css("display","table-row");
                $("#buildType").css("display","none");
                $("#eDsModel").css("display","none");
                srcSourceType = "2";
            }else{
                $("#updateType").css("display","none");
                $("#buildType").css("display","table-row");
                $("#eDsModel").css("display","table-row");
                srcSourceType = "1";
            }
        });

        //加载参数栏
        $.post("${basePath}/com/props/select/${pkId}", {}, function (data) {

            grid1.addRows(data.data);
        });

        //加载映射
        $.post("${basePath}/im/imMMapping/getImMMappingByMid/${pkId}", {}, function (data) {

            grid2.addRows(data.data);
        });

        //加载过滤栏
        $.post("${basePath}/im/imMFilter/getImMFilterByMid/${pkId}", {}, function (data) {

            grid4.addRows(data.data);
        });

        //加载更新主键
        $.post("${basePath}/im/md/col/selectModelUpdateKeys/${pkId}", {}, function (data) {
            var key = [];
            var value = [];
            for (var i = 0, len = data.data.length; i < len; i++) {
                key.push(data.data[i].pkId);
                value.push(data.data[i].name);
            };
            updateKeyObject.setValue(key.join(","));
            updateKeyObject.setText(value.join(","));
        });
    }


    //源数据源改变时改变参数列表
    function srcSourceChange(){
        //将参数配置栏和字段映射栏重置
        grid1.clearRows();
        grid2.clearRows();
        filterCols = [];
        cols = [];
        //将参数配置栏自动输入
        $.post("${basePath}/com/ds/selectParameters/"+srcDsModel.value, {}, function (data) {
            if (data.length > 0) {
                for (var i = 0, len = data.length; i < len; i++) {
                    cols.push({
                        "name": data[i].dictId,
                        "describe": data[i].dictName,
                        "value":"",
                        "note":""
                    });
                }
            }
            grid1.addRows(cols);
        });

        //判断数据源实时非实时来判断显示跟新策略还是构建策略并清空原来数据
        $.post("${basePath}/com/ds/checkSourceType/"+srcDsModel.value, {}, function (data) {
            if(data.data == true){
                $("#updateType").css("display","table-row");
                $("#buildType").css("display","none");
                buildModeObject.setValue("");
                $("#eDsModel").css("display","none");
                srcSourceType = "2";
            }else{
                $("#updateType").css("display","none");
                updateModeObject.setValue("");
                updateKeyObject.setValue("");
                $("#buildType").css("display","table-row");
                $("#eDsModel").css("display","table-row");
                srcSourceType = "1";
            }
        });
    }


    //加载字段映射
    function lodaMapping(){
        //清楚原来配置  ---是否必要！！！
        grid2.clearRows();
        //可过滤字段制空
        filterCols = [];
        var properties = getComPropertiess();
        var json = nui.encode(properties);

        $.ajax({
            url: "${basePath}/im/model/getColumnsInfo/"+srcDsModel.value,
            type: 'POST',
            data: json,
            cache: false,
            contentType: 'application/json',
            success: function (data) {
                //对data内容解析加载到grid2中
                for (var i = 0, len = data.data.length; i < len; i++) {
                    filterCols.push({
                        "name": data.data[i].name,
                        "colId": "",
                        "note": data.data[i].note,
                        "describe": data.data[i].describe,
                        "length": data.data[i].length,
                        "type": data.data[i].type
                    });
                };
                //字段映射加进去
                grid2.addRows(filterCols);
            }
        });
    }

    //添加映射
    function addMapp(){
        var rows = grid2.getData(true, true);
        var length = rows.length;
        var newRow = {};
        grid2.addRow(newRow, length);
    }
    //映射选中
    function selected1(){
        var rows = grid2.getSelecteds();
        if (rows.length > 0) {
            nui.get("removeMapp").enable();
        } else if (rows.length == 0) {
            nui.get("removeMapp").disable();
        }
    }

    //字段过滤选中
    function selected2(){
        var rows = grid4.getSelecteds();
        if (rows.length > 0) {
            nui.get("removeFilter").enable();
        } else if (rows.length == 0) {
            nui.get("removeFilter").disable();
        }
    }

    //删除映射
    function removeMapp(){
        var rows = grid2.getSelecteds();
        if (rows.length > 0) {
            grid2.removeRows(rows, true);
        } else {
            nui.alert("请至少选中一条记录!");
        }
    }

    //添加字段过滤
    function addFilter(){
        var rows = grid4.getData(true, true);
        var length = rows.length;
        var newRow = {};
        grid4.addRow(newRow, length);
    }

    //删除字段过滤
    function removeFilter(){
        var rows = grid4.getSelecteds();
        if (rows.length > 0) {
            grid4.removeRows(rows, true);
        } else {
            nui.alert("请至少选中一条记录!");
        }
    }

    //保存
    function save(){
        var date = getSaveData();
        if (!date) {
            return;
        }
        var json = nui.encode(date);
        // --发送信息--
        form1.loading("正在保存中,请稍等...");
        //禁用保存按钮
        nui.get("saveButton").disable();
        $.ajax({
            url: "${basePath}/im/model/update/${pkId}",
            type: 'POST',
            data: json,
            cache: false,
            contentType: 'application/json',
            success: function (result) {
                if (result.status == true) {
                    nui.alert(result.message);
                    CloseWindow("success");
                } else {
                    nui.alert(result.message, "系统提示", function (action) {
                        if (action == "ok" || action == "close") {
                            CloseWindow("failed");
                        }
                    });
                }
                form1.unmask();
                //解除保存按钮禁用
                nui.get("saveButton").enable();
            }
        });

    }

    function getSaveData() {
        var baseData = getBaseData();
        if (!baseData) {
            return;
        }
        var comPropertiesList = getComPropertiess();
        if (!comPropertiesList) {
            return;
        }
        var imModelMappings = getModelMappings();
        if (!imModelMappings) {
            return;
        }
        var imModelFilterCols = getImModelFilterCols();
        if (!imModelFilterCols) {
            return;
        }
        //修改其删除状态
        baseData.delFlg = "0";
        //修改其对应的是非实时
        baseData.type = srcSourceType;
        baseData.status = "1";
        var saveData = {
            "imModel": baseData,
            "imModelMappings": imModelMappings,
            "imModelFilterCols":imModelFilterCols,
            "comPropertiesList":comPropertiesList
        };
        return saveData;
    }

    function getBaseData() {
        //基础信息栏数据校验
        form1.validate();
        if (form1.isValid() == false) {
            return false;
        }
        var baseData = form1.getData(true, true);
        return baseData;
    }

    function getComPropertiess(){
        grid1.validate();
        if (grid1.isValid() == false) {
            return false;
        }
        var comPropertiess = grid1.getData(true, true);
        //检查名称是否重复
        if(!checkProperties(comPropertiess)){
            return false;
        }
        return comPropertiess;
    }

    function getModelMappings(){
        grid2.validate();
        if (grid2.isValid() == false) {
            return false;
        }
        var result = true;
        var modelMappings = grid2.getData(true, true);
        $.each(modelMappings, function (_index, record) {
            record.seq = grid2.indexOf(record) + 1;
            if(record.name == null || record.name == ""){
                nui.alert("【字段映射】的位置" + record.seq + "：名称不能为空");
                result = false;
                return;
            }
            if(record.colId == null || record.colId == ""){
                nui.alert("【字段映射】的位置" + record.seq + "：目标字段不能为空");
                result = false;
                return;
            }
            if(record.type == null || record.type == ""){
                nui.alert("【字段映射】的位置" + record.seq + "：字段类型不能为空");
                result = false;
                return;
            }
            if(record.describe == null || record.describe == ""){
                nui.alert("【字段映射】的位置" + record.seq + "：描述不能为空");
                result = false;
                return;
            }
        });
        if(result == false){
            return false;
        }
        return modelMappings;
    }

    function getImModelFilterCols(){
        grid4.validate();
        if (grid4.isValid() == false) {
            return false;
        }
        var result = true;
        var modelFilterCols = grid4.getData(true, true);
        $.each(modelFilterCols, function (_index, record) {
            record.seq = grid4.indexOf(record) + 1;
            if(record.name == null || record.name == ""){
                nui.alert("【过滤字段】的位置" + record.seq + "：名称不能为空");
                result = false;
                return;
            }
            if(record.type == null || record.type == ""){
                nui.alert("【过滤字段】的位置" + record.seq + "：字段类型不能为空");
                result = false;
                return;
            }
            if(record.describe == null || record.describe == ""){
                nui.alert("【过滤字段】的位置" + record.seq + "：描述不能为空");
                result = false;
                return;
            }
            if(record.operator == null || record.operator == ""){
                nui.alert("【过滤字段】的位置" + record.seq + "：操作符不能为空");
                result = false;
                return;
            }
            if(record.label == null || record.label == ""){
                record.label = record.name;
            }
        })
        if(result == false){
            return false;
        }
        return modelFilterCols;
    }

    //返回
    function cancel(){
        CloseWindow("onCancel");
    }

    //添加目标元数据
    function addTarget(){
        nui.open({
            url: "${basePath}/goframe/p/im.cm.md.add?fromModel=true",
            title: "添加",
            width: 800,
            height: 600,
            onload: function () {
            },
            ondestroy: function (action) {
                //重新加载下
                $.ajax({
                    url: "${basePath}/im/md/selectAll",
                    type: 'POST',
                    cache: false,
                    async:false,
                    contentType: 'application/json',
                    success: function (data) {
                        targetDsModel.load(data.data);
                    }
                });
                var k = 0;
                for(;k < targetDsModel.data.length ;k++){
                    if(targetDsModel.data[k].pkId == action){
                        break;
                    }
                }
                //将目标元数据id映射添加到目标元数据中
                targetDsModel.select(k);
                //更新全局变量目标元数据的id
                targetSourceId = action;
            }
        })
    }

    //目标元数据变化时
    function targetSourceChange(){
        //更新目标元数据id
        targetSourceId = targetDsModel.value;

        //字段映射栏对应的目标字段全部制空
        var data = grid2.getData(true, true);
        if(data == null || data.length == 0){
            return;
        }
        var cols = [];
        //设置可下拉的目标字段信息
        $.each(data, function (_index, record) {
            data[_index].colId = "";
        })
        grid2.clearRows();
        grid2.addRows(data);
    }

    //过滤字段可选内容
    function targetFilterColumn(e){
        e.source.load(filterCols);
    }

    //获取目标元数据字段
    function targetMateColumn(e){
        $.ajax({
            url: "${basePath}/im/md/col/select/" + targetSourceId,
            type: 'POST',
            cache: false,
            contentType: 'application/json',
            success: function (data) {
                e.source.load(data.data);
            }
        });
    }

    //过滤字段发生变化时
    function colNameChanged1(){
        // --同一行的说明、长度和别名变化--
        var selected = e.selected;
        var row = grid1.getSelected();
        row.describe = selected.describe;
        row.length = selected.length;
        row.label = selected.name;
        row.type = selected.type;
        row.operator = "==";
        row.isNeed = "0";
        row.defaultValue = ""
    }

    //名称校验
    function nameValidation(e) {
        if (e.isValid) {
            if (checkPattern(e.value) == false) {
                e.errorText = "只能包含字母、数字、下划线，且以字母开头";
                e.isValid = false;
            }

            //如果和开始名称不一样则检查名称
            if(e.value != modelName){
                $.ajax({
                    url: "${basePath}/im/model/checkExist/" + e.value,
                    type: 'POST',
                    cache: false,
                    async:false,
                    contentType: 'application/json',
                    success: function (data) {
                        //状态成功并信息是是的
                        if(data.status = true && data.data == true){
                            e.errorText = "名称已存在";
                            e.isValid = false;
                        }
                    }
                });
            }
        }
    }

    /**
     * 检查是否满足字母、数字、下划线，且以字母开头
     */
    function checkPattern(v) {
        var re = new RegExp("^[A-Za-z][A-Za-z0-9_]{0,63}$");
        if (re.test(v)) {
            return true;
        }
        return false;
    }
    
    function comPropertiesName(e) {
        e.source.load(cols);
    }

    /**
     * 检查参数名称是否重复
     */
    function checkProperties(properties) {
        //算法1、遍历
        var repetFlg = true;
        $.each(properties, function (_index, record) {
            var repetCount = 0;
            if(record.value == null || record.value == ""){
                nui.alert("【参数配置】的位置" + (_index+1) + "：内容不能为空");
                repetFlg = false;
                return repetFlg;
            }
            $.each(properties, function (i, item) {
                if (record.name == item.name) {
                    repetCount++;
                }
            });
            if (repetCount > 1) {
                repetFlg = false;
            }
        });
        return repetFlg;
    }

    function addComProperties() {
        var rows = grid1.getData(true, true);
        var length = rows.length;
        var newRow = {};
        grid1.addRow(newRow, length);
    }

    //删除字段过滤
    function removeComProperties(){
        var rows = grid1.getSelecteds();
        if (rows.length > 0) {
            grid1.removeRows(rows, true);
        } else {
            nui.alert("请至少选中一条记录!");
        }
    }

    function selectedProperties() {
        var rows = grid1.getSelecteds();
        if (rows.length > 0) {
            nui.get("removeComProperties").enable();
        } else if (rows.length == 0) {
            nui.get("removeComProperties").disable();
        }
    }

    //参数名称变化时
    function propertieChange(e){
        // --同一行的说明、长度和别名变化--
        var selected = e.selected;
        var row = grid1.getSelected();
        row.describe = selected.describe;
        row.value = "";
    }

    function showTargetCols(e) {
        var targetCols = this;
        if(!targetSourceId){
            return;
        }
        nui.open({
            url:"${basePath}/goframe/p/im.cm.model.updatekeys_edit?tMdId="+targetSourceId,
            title:"编辑更新主键",
            width:700,
            height:400,
            onload:function(){
                var data = e.source.value;
                var iframe = this.getIFrameEl();
                iframe.contentWindow.SetData(data);
            },
            ondestroy:function(){
                var iframe = this.getIFrameEl();
                var data = iframe.contentWindow.GetData();
                targetCols.setValue(data.keys);
                targetCols.setText(data.values);
            }
        });
    }
</script>
<!--#end-->