${extends("/goframe/function_layout.httl")}
<!--#macro(content)-->
<div style="padding: 5px 5px 0px 5px;">
    <div id="form1" method="post">
            <table style="width:100%;height:100%;" cellpadding="5px,0px,5px,0px" class="nui-form-table">
                <tr>
                    <th class="nui-form-label"><label for="serviceIds">服务名称：</label></th>
                    <td colspan="3">
                        <input id="serviceIds" name="serviceIds" class="nui-buttonedit" style="width: 99%;"  emptyText="请选择服务名称"
                               onbuttonclick="showSelectServices" required="true"/>
                    </td>
                </tr>
                <tr>
                    <th class="nui-form-label"><label for="userIds">用户：</label></th>
                    <td colspan="3">
                        <input id="userIds" name="userIds"class="nui-buttonedit" allowInput="false" style="width: 99%;"  emptyText="请选择用户" onbuttonclick="showSelectUsers" required="true"/>
                    </td>
                </tr>
                <tr>
                    <th class="nui-form-label"><label for="ipSection">IP段：</label></th>
                    <td colspan="3">
                        <input  id="ipSection" class="nui-textarea" style="height:60px; width:99%;"
                                emptyText="默认不拦截,支持模式，1、固定IP，如196.1.26.3；2、*号代替，如196.1.26.*、*.*.*.*；3、IP段范围196.1.*.[8,9-26]、196.1.26.[1-5,9-26]"/>
                    </td>
                </tr>
                <tr>
                    <th class="nui-form-label"><label for="maxSyncNum">运行队列大小（同步）：</label></th>
                    <td>
                        <input id="maxSyncNum" name="maxSyncNum"  class="nui-textbox"  style="width:97%" required="true" value="100" vtype="int" />
                    </td>
                    <th class="nui-form-label"><label for="maxAsyncNum">运行队列大小（异步）：</label></th>
                    <td>
                        <input id="maxAsyncNum" name="maxAsyncNum"  class="nui-textbox"  style="width:97%" required="true" value="50" vtype="int" />
                    </td>
                </tr>
                <tr>
                    <th class="nui-form-label"><label for="maxSyncWaitNum">等待队列大小（同步）：</label></th>
                    <td>
                        <input id="maxSyncWaitNum" name="maxSyncWaitNum"  class="nui-textbox"  style="width:97%" required="true" value="0" vtype="int" />
                    </td>
                    <th class="nui-form-label"><label for="maxAsyncWaitNum">等待队列大小（异步）：</label></th>
                    <td>
                        <input id="maxAsyncWaitNum" name="maxAsyncWaitNum"  class="nui-textbox"  style="width:97%" required="true" value="0" vtype="int" />
                    </td>
                </tr>
                <tr>
                    <th class="nui-form-label"><label for="maxSyncExecuteTimeout">运行超时时间（同步/单位：秒）：</label></th>
                    <td>
                        <input id="maxSyncExecuteTimeout" name="maxSyncExecuteTimeout"  class="nui-textbox"  style="width:97%" vtype="int" />
                    </td>
                    <th class="nui-form-label"><label for="maxAsyncExecuteTimeout">运行超时时间（异步/单位：秒）：</label></th>
                    <td>
                        <input id="maxAsyncExecuteTimeout" name="maxAsyncExecuteTimeout"  class="nui-textbox"  style="width:97%" vtype="int" />
                    </td>
                </tr>
                <tr>
                    <th class="nui-form-label"><label for="maxSyncWaitTimeout">等待超时时间（同步/单位：秒）：</label></th>
                    <td>
                        <input id="maxSyncWaitTimeout" name="maxSyncWaitTimeout"  class="nui-textbox"  style="width:97%" vtype="int" />
                    </td>
                    <th class="nui-form-label"><label for="maxAsyncWaitTimeout">等待超时时间（异步/单位：秒）：</label></th>
                    <td>
                        <input id="maxAsyncWaitTimeout" name="maxAsyncWaitTimeout"  class="nui-textbox"  style="width:97%" vtype="int" />
                    </td>
                </tr>
            </table>
        <div class="nui-toolbar" style="text-align:center;padding-top:10px;padding-bottom:5px;" borderStyle="border:0;">
            <a class="nui-button" style="" iconCls="icon-save" onclick="save" id="saveButton">保存</a>
            <span style="display:inline-block;width:25px;"></span>
            <a class="nui-button" style="" iconCls="icon-cancel" onclick="cancel">返回</a>
        </div>
    </div>
</div>

<script type="text/javascript">
    var form1;
    var grid1;
    var serviceId_nuiObject;
    /**
     * 按需加载资源文件
     */
    require(['jquery', 'nui'], function ($, nui) {
        nui.parse();
        form1 = new nui.Form("#form1");
        grid1 = nui.get("datagrid1");
        serviceId_nuiObject=nui.get("serviceIds");
        var serviceGetName = '${serviceGetName}';
        var pkGetId = '${pkGetId}';
        if(pkGetId&&pkGetId.length>0){
            nui.get("serviceIds").setValue(pkGetId);
            nui.get("serviceIds").setText(serviceGetName);
            nui.get("serviceIds").setEnabled(false);
        }
    });

    /**
     * 保存
     */
    function save() {
        form1.validate();
        if (form1.isValid() == false) {
            return;
        }
        var saveData = form1.getData(true, true);
        if (!saveData) {
            return;
        }

        //检查并发数是否合法
        if(saveData.maxSyncNum < 0 || saveData.maxAsyncNum < 0 ){
            nui.alert("最大异步/同步并发数不能小于0！");
            return;
        }
        //debugger;
        //检查用户服务关系唯一性
        var flg=checkExists(saveData.userIds,saveData.serviceIds);
        if(flg){
            nui.alert("对应的用户-服务关系已经存在！");
            return false;
        }

        //检查IP段是否合法
        var ipSection=nui.get("ipSection").getValue();
        var ipFlg=true;
        if(ipSection!=null&&ipSection!=""){
            ipFlg=checkModel(ipSection);
        }
        if(!ipFlg){
            nui.alert("IP段表达式不合法");
            return false;
        }
        insertData(saveData);
    }

    function insertData(saveData){
        var json = nui.encode(saveData);
        // --发送信息--
        form1.loading("正在保存中,请稍等...");
        //禁用保存按钮
        nui.get("saveButton").disable();
        $.ajax({
            url: "${basePath}/rc/userService/insertBatch",
            type: 'POST',
            data: json,
            cache: false,
            contentType: 'application/json',
            success: function (result) {
                if (result.status == true) {
                    nui.alert(result.message);
                    CloseWindow("success");
                } else {
                    nui.alert(result.message, "系统提示", function (action) {
                        if (action == "ok" || action == "close") {
                            CloseWindow("failed");
                        }
                    });
                }
                form1.unmask();
                //解除保存按钮禁用
                nui.get("saveButton").enable();
            }
        });
    }

    function checkExists(userIds,serviceIds){
        var flg;
        $.ajax({
            url: "${basePath}/rc/userService/checkExistsBatch/"+userIds+"/"+serviceIds,
            type: 'POST',
            cache: false,
            async: false,
            contentType: 'application/json',
            success: function (result) {
                if (result.status) {
                    flg= result.data;
                }else{
                    nui.alert(result.message);
                }
            }
        });
        return flg;
    }

    /**
     * 检查IP段是否合法
     */
    function checkModel(ipSection){
        var rcUserServiceView={};
        rcUserServiceView.ipSection=ipSection;
        var json= nui.encode(rcUserServiceView);
        var flg;
        $.ajax({
            url: "${basePath}/rc/userService/checkModel/",
            type: 'POST',
            cache: false,
            async: false,
            data: json,
            contentType: 'application/json',
            success: function (result) {
                if (result.status) {
                    flg= result.data;
                }else{
                    nui.alert(result.message);
                }
            }
        });
        return flg;
    }

    function showSelectUsers(){
        var serviceIdObject=nui.get("serviceIds");
        var serviceIds=serviceIdObject.getValue();
        if(serviceIds==null||serviceIds==""){
            nui.alert("请先选择服务！");
            return;
        }
        var userIdObject=nui.get("userIds");
        nui.open({
            url: "${basePath}/goframe/p/rc.auth.usersSelected",
            title: "选择用户",
            width: 680,
            height: 420,
            onload:function(){
                var data={};
                data.userIds = userIdObject.getValue();
                data.serviceIds=serviceIds;
                var iframe = this.getIFrameEl();
                iframe.contentWindow.SetData(data);
            },
            ondestroy:function(action){
                if(action == "ok"){
                    debugger;
                    var iframe = this.getIFrameEl();
                    var data = iframe.contentWindow.GetData();
                    userIdObject.setValue(data.userIds);
                    userIdObject.setText(data.userNames);
                }
            }
        });
    }

    function showSelectServices(){
        var serviceIdObject=nui.get("serviceIds");
        var serviceIds=serviceIdObject.getValue();
        nui.open({
            url: "${basePath}/goframe/p/rc.auth.servicesSelected",
            title: "选择服务",
            width: 680,
            height: 420,
            onload:function(){
                var data = serviceIds
                var iframe = this.getIFrameEl();
                iframe.contentWindow.SetData(data);
            },
            ondestroy:function(action){
                if(action == "ok"){
                    debugger;
                    var iframe = this.getIFrameEl();
                    var data = iframe.contentWindow.GetData();
                    serviceIdObject.setValue(data.serviceIds);
                    serviceIdObject.setText(data.serviceNames);
                    //判断serviceIds是否发生改变
                    if(serviceIds!=data.serviceIds){
                        //设置用户为空
                        var userIdObject=nui.get("userIds");
                        userIdObject.setValue("");
                        userIdObject.setText("");
                    }
                }
            }
        });
    }

    /**
     * 返回
     */
    function cancel() {
        CloseWindow("onCancel");
    }

</script>
<!--#end-->